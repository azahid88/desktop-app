<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>